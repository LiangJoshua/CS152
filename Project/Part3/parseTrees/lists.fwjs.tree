(prog (stat (expr var tru = (expr function ( (expr x) , (expr y) ) (block { (stat (expr x) ;) }))) ;) (stat (expr var fls = (expr function ( (expr x) , (expr y) ) (block { (stat (expr y) ;) }))) ;) (stat (expr var pair = (expr function ( (expr x) , (expr y) ) (block { (stat (expr function ( (expr f) ) (block { (stat (expr f ( (expr x) , (expr y) )) ;) })) ;) }))) ;) (stat (expr var fst = (expr function ( (expr p) ) (block { (stat (expr p ( (expr tru) )) ;) }))) ;) (stat (expr var snd = (expr function ( (expr p) ) (block { (stat (expr p ( (expr fls) )) ;) }))) ;) (stat (expr var p = (expr pair ( (expr 1) , (expr 2) ))) ;) (stat print ( (expr fst ( (expr p) )) ) ;) (stat print ( (expr snd ( (expr p) )) ) ;) (stat (expr var cons = (expr pair)) ;) (stat (expr var head = (expr fst)) ;) (stat (expr var tail = (expr snd)) ;) (stat (expr var isEmpty = (expr function ( (expr lst) ) (block { (stat (expr (expr lst) == (expr null)) ;) }))) ;) (stat (expr var nums = (expr cons ( (expr 1) , (expr cons ( (expr 2) , (expr cons ( (expr 3) , (expr cons ( (expr 4) , (expr cons ( (expr 5) , (expr cons ( (expr 6) , (expr cons ( (expr 7) , (expr cons ( (expr 8) , (expr cons ( (expr 9) , (expr cons ( (expr 10) , (expr null) )) )) )) )) )) )) )) )) )) ))) ;) (stat (expr var sumList = (expr function ( (expr lst) ) (block { (stat if ( (expr isEmpty ( (expr lst) )) ) (block (stat (expr 0) ;)) else (block (stat (expr (expr head ( (expr lst) )) + (expr sumList ( (expr tail ( (expr lst) )) ))) ;))) }))) ;) (stat print ( (expr sumList ( (expr nums) )) ) ;))
